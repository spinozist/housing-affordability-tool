(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react", "prop-types", "./Table", "./Row", "./Cell"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"), require("prop-types"), require("./Table"), require("./Row"), require("./Cell"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.propTypes, global.Table, global.Row, global.Cell);
    global.index = mod.exports;
  }
})(this, function (_exports, _react, _propTypes, _Table, _Row, _Cell) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "Table", {
    enumerable: true,
    get: function get() {
      return _Table["default"];
    }
  });
  Object.defineProperty(_exports, "Row", {
    enumerable: true,
    get: function get() {
      return _Row["default"];
    }
  });
  Object.defineProperty(_exports, "Cell", {
    enumerable: true,
    get: function get() {
      return _Cell["default"];
    }
  });
  _exports.StickyTable = void 0;
  _react = _interopRequireWildcard(_react);
  _propTypes = _interopRequireDefault(_propTypes);
  _Table = _interopRequireDefault(_Table);
  _Row = _interopRequireDefault(_Row);
  _Cell = _interopRequireDefault(_Cell);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

  function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  var index = 0;
  /**
   * StickyTable Component
   * Responsive, dynamically sized fixed headers and columns for tables
   * ------------------------------------------------------------------
   * Intentionally not setting state because we don't want to require
   * a full re-render every time the user scrolls or changes the
   * width of a cell.
   */

  var StickyTable =
  /*#__PURE__*/
  function (_PureComponent) {
    _inherits(StickyTable, _PureComponent);

    function StickyTable(props) {
      var _this;

      _classCallCheck(this, StickyTable);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(StickyTable).call(this, props));
      _this.index = index = index + 1;
      return _this;
    }
    /**
     * Get the column and header to render
     * @returns {undefined}
     */


    _createClass(StickyTable, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            stickyColumnCount = _this$props.stickyColumnCount,
            stickyHeaderCount = _this$props.stickyHeaderCount;
        stickyColumnCount = Math.min(stickyColumnCount, 1);
        stickyHeaderCount = Math.min(stickyHeaderCount, 1);
        return _react["default"].createElement("div", {
          className: ['sticky-table', "sticky-table-".concat(this.index), this.props.className || ''].join(' ')
        }, _react["default"].createElement("style", null, "\n            .sticky-table-".concat(this.index, " .sticky-table-row:nth-child(-n+").concat(stickyHeaderCount, ") .sticky-table-cell {\n              position: -webkit-sticky;\n              position: sticky;\n              top: 0;\n              z-index: 2;\n            }\n            .sticky-table-").concat(this.index, " .sticky-table-row .sticky-table-cell:nth-child(-n+").concat(stickyColumnCount, ") {\n              position: -webkit-sticky;\n              position: sticky;\n              left: 0;\n              z-index: 2;\n            }\n            .sticky-table-").concat(this.index, " .sticky-table-row:nth-child(-n+").concat(stickyHeaderCount, ") .sticky-table-cell:nth-child(-n+").concat(stickyColumnCount, ") {\n              position: -webkit-sticky;\n              position: sticky;\n              top: 0;\n              left: 0;\n              z-index: 3;\n            }\n          ")), _react["default"].createElement(_Table["default"], null, this.props.children));
      }
    }]);

    return StickyTable;
  }(_react.PureComponent);

  _exports.StickyTable = StickyTable;

  _defineProperty(StickyTable, "propTypes", {
    stickyHeaderCount: _propTypes["default"].number,
    stickyColumnCount: _propTypes["default"].number,
    onScroll: _propTypes["default"].func
  });

  _defineProperty(StickyTable, "defaultProps", {
    stickyHeaderCount: 1,
    stickyColumnCount: 1
  });
});