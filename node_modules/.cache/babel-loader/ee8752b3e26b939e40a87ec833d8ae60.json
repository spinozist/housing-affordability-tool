{"ast":null,"code":"import _slicedToArray from \"/Users/erikwoodworth/Coding/ARC/affordability-by-income/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/erikwoodworth/Coding/ARC/affordability-by-income/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport numeral from 'numeral';\n\nvar tractData = require('./data/median-sale-price.json');\n\nvar App = function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      income = _useState2[0],\n      setIncome = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      affordablePayment = _useState4[0],\n      setAffordablePayment = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      salePrice = _useState6[0],\n      setSalePrice = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      percentOfIncome = _useState8[0],\n      setPercentOfIncome = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      affordableLoan = _useState10[0],\n      setAffordableLoan = _useState10[1];\n\n  var padding = 10;\n  console.log(income);\n\n  var affordableLoanCalc = function affordableLoanCalc(income, year, apr) {\n    var percentOfIncome = .2;\n    var affordablePayment = income * percentOfIncome / 12;\n    var n = year * 12;\n    var c = apr / 12;\n    var paymentDivisor = c * Math.pow(c + 1, n) / (Math.pow(c + 1, n) - 1);\n    var affordableLoan = parseFloat(affordablePayment) / parseFloat(paymentDivisor);\n    setAffordablePayment(affordablePayment);\n    setAffordableLoan(affordableLoan);\n  };\n\n  var percentOfIncomeCalc = function percentOfIncomeCalc(income, salePrice, year, apr) {\n    var monthlyIncome = income / 12;\n    var n = year * 12;\n    var c = apr / 12;\n    var paymentMultiplier = c * Math.pow(c + 1, n) / (Math.pow(c + 1, n) - 1);\n    var monthlyPayment = salePrice * paymentMultiplier;\n    console.log(salePrice);\n    var percentOfIncome = monthlyPayment / monthlyIncome;\n    return percentOfIncome * 100;\n  };\n\n  var handleTractData = function handleTractData() {\n    return console.log(tractData ? tractData.map(function (tract) {\n      return {\n        'Census Tract': tract['Census Tract'],\n        'Median Sale Price': tract['Median Sale Price'],\n        'Income': income,\n        'Percent of Income': percentOfIncomeCalc(income, parseFloat(tract['Median Sale Price']), 30, .045)\n      };\n    }) : null);\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      padding: padding\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Housing Affordability Calculator\"), React.createElement(\"input\", {\n    name: \"income\",\n    placeholder: \"Enter Income\",\n    value: income,\n    onChange: function onChange(event) {\n      return setIncome(numeral(event.target.value).format('$0,0'));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    style: {\n      margin: 10\n    },\n    name: \"home-sale-price\",\n    placeholder: \"Enter Sale Price\",\n    value: salePrice,\n    onChange: function onChange(event) {\n      return setSalePrice(numeral(event.target.value).format('$0,0'));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    // onClick={() => affordableLoanCalc(income.value(), 30, .045)} \n    onClick: function onClick() {\n      setPercentOfIncome(percentOfIncomeCalc(numeral(income).value(), numeral(salePrice).value(), 30, .045));\n      handleTractData();\n    },\n    style: {\n      margin: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Calculate Percent of Income to Afford\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, percentOfIncome ? \"Your mortgage payment would be \".concat(percentOfIncome.toFixed(1), \"% of your income each month.\") : null));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/erikwoodworth/Coding/ARC/affordability-by-income/src/App.js"],"names":["React","useState","useEffect","numeral","tractData","require","App","income","setIncome","affordablePayment","setAffordablePayment","salePrice","setSalePrice","percentOfIncome","setPercentOfIncome","affordableLoan","setAffordableLoan","padding","console","log","affordableLoanCalc","year","apr","n","c","paymentDivisor","Math","pow","parseFloat","percentOfIncomeCalc","monthlyIncome","paymentMultiplier","monthlyPayment","handleTractData","map","tract","event","target","value","format","margin","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport numeral from 'numeral';\nconst tractData = require('./data/median-sale-price.json')\n\n\nconst App = () => {\n    const [income, setIncome] = useState();\n    const [affordablePayment, setAffordablePayment] = useState();\n    const [salePrice, setSalePrice] = useState();\n    const [percentOfIncome , setPercentOfIncome] = useState();\n    const [affordableLoan, setAffordableLoan] = useState();\n    const padding = 10;\n\n    console.log(income);\n\n    const affordableLoanCalc = (income, year, apr) => {\n        const percentOfIncome = .2;\n        const affordablePayment = (income * percentOfIncome)/12;\n        const n = year * 12;\n        const c = apr/12;\n        const paymentDivisor = (c * Math.pow((c + 1),n))/(Math.pow((c + 1), n) - 1);\n        const affordableLoan = parseFloat(affordablePayment) / parseFloat(paymentDivisor);    \n\n        setAffordablePayment(affordablePayment);\n        setAffordableLoan(affordableLoan);\n    }\n\n    const percentOfIncomeCalc = (income, salePrice, year, apr) => {\n        const monthlyIncome = income / 12;\n        const n = year * 12;\n        const c = apr / 12;\n        const paymentMultiplier = (c * Math.pow((c + 1),n))/(Math.pow((c + 1), n) - 1);\n        const monthlyPayment = salePrice * paymentMultiplier;\n\n        console.log(salePrice)\n\n\n        const percentOfIncome = monthlyPayment / monthlyIncome;\n\n        return percentOfIncome * 100;\n    }\n\n    const handleTractData = () => \n    \n    console.log(tractData ? tractData.map(tract => ({\n        'Census Tract' : tract['Census Tract'],\n        'Median Sale Price' : tract['Median Sale Price'],\n        'Income' : income,\n        'Percent of Income' :  percentOfIncomeCalc(income, parseFloat(tract['Median Sale Price']), 30, .045)\n    })) : null );\n\n\n    return(\n        <div style={{\n            padding: padding\n        }}>\n            <h2>Housing Affordability Calculator</h2>\n            <input \n                name='income'\n                placeholder='Enter Income'\n                value={income}\n                onChange={event => setIncome(numeral(event.target.value).format('$0,0'))}\n            />\n            <input\n                style={{\n                    margin: 10\n                }} \n                name='home-sale-price'\n                placeholder='Enter Sale Price'\n                value={salePrice}\n                onChange={event => setSalePrice(numeral(event.target.value).format('$0,0'))}\n            />\n            <button\n                // onClick={() => affordableLoanCalc(income.value(), 30, .045)} \n                onClick={() => {\n                    setPercentOfIncome(percentOfIncomeCalc(numeral(income).value(), numeral(salePrice).value(), 30, .045));\n                    handleTractData();\n                }}\n                style={{\n                    margin: 10\n                }}\n            >\n                Calculate Percent of Income to Afford\n            </button>\n            <h3>{percentOfIncome ? `Your mortgage payment would be ${percentOfIncome.toFixed(1)}% of your income each month.` : null }</h3>\n            {/* <h3>Affordable Monthly Payment: ${affordablePayment}</h3> */}\n            {/* <h3>Affordable Loan: ${affordableLoan}</h3> */}\n        </div>\n    )\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}