{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _rangeCss = require(\"./range.css.js\");\n\nvar _rangeCss2 = _interopRequireDefault(_rangeCss);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Slider = function (_Component) {\n  _inherits(Slider, _Component);\n\n  function Slider(props) {\n    _classCallCheck(this, Slider);\n\n    var _this = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props));\n\n    var value = _this.props.value ? _this.props.value : props.multiple ? [].concat(_toConsumableArray(props.settings.start)) : props.settings.start;\n    _this.state = {\n      value: value,\n      position: props.multiple ? [] : 0,\n      numberOfThumbs: props.multiple ? value.length : 1,\n      offset: 10,\n      precision: 0,\n      mouseDown: false\n    };\n    _this.determinePosition = _this.determinePosition.bind(_this);\n    _this.rangeMouseUp = _this.rangeMouseUp.bind(_this);\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.determinePrecision();\n      var value = this.props.value ? this.props.value : this.state.value;\n      this.setValuesAndPositions(value, false);\n      window.addEventListener(\"mouseup\", this.rangeMouseUp);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.value && nextProps.value !== this.state.value) {\n        if (this.props.multiple) {\n          var different = this.isDifferentArrays(nextProps.value, this.state.value);\n\n          if (different) {\n            this.setValuesAndPositions(nextProps.value, true);\n          }\n        } else {\n          this.setValuesAndPositions(nextProps.value, true);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.inner = undefined;\n      this.innerLeft = undefined;\n      this.innerRight = undefined;\n      window.removeEventListener(\"mouseup\", this.rangeMouseUp);\n    }\n  }, {\n    key: \"setValuesAndPositions\",\n    value: function setValuesAndPositions(value, triggeredByUser) {\n      var _this2 = this;\n\n      if (this.props.multiple) {\n        var positions = [].concat(_toConsumableArray(this.state.position));\n        value.forEach(function (val, i) {\n          _this2.setValue(val, triggeredByUser, i);\n\n          positions[i] = _this2.determinePosition(val);\n        });\n        this.setState({\n          position: positions\n        });\n      } else {\n        this.setValue(value, triggeredByUser);\n        this.setState({\n          position: this.determinePosition(value)\n        });\n      }\n    }\n  }, {\n    key: \"isDifferentArrays\",\n    value: function isDifferentArrays(a, b) {\n      var different = false;\n      a.some(function (val, i) {\n        if (val !== b[i]) {\n          different = true;\n          return true;\n        }\n      });\n      return different;\n    }\n  }, {\n    key: \"determinePosition\",\n    value: function determinePosition(value) {\n      var trackLeft = _reactDom2.default.findDOMNode(this.track).getBoundingClientRect().left;\n\n      var innerLeft = _reactDom2.default.findDOMNode(this.inner).getBoundingClientRect().left;\n\n      var ratio = (value - this.props.settings.min) / (this.props.settings.max - this.props.settings.min);\n      var position = Math.round(ratio * this.inner.offsetWidth) + trackLeft - innerLeft - this.state.offset;\n      return position;\n    }\n  }, {\n    key: \"determinePrecision\",\n    value: function determinePrecision() {\n      var split = String(this.props.settings.step).split(\".\");\n      var decimalPlaces = void 0;\n\n      if (split.length === 2) {\n        decimalPlaces = split[1].length;\n      } else {\n        decimalPlaces = 0;\n      }\n\n      this.setState({\n        precision: Math.pow(10, decimalPlaces)\n      });\n    }\n  }, {\n    key: \"determineValue\",\n    value: function determineValue(startPos, endPos, currentPos) {\n      var ratio = (currentPos - startPos) / (endPos - startPos);\n      var range = this.props.settings.max - this.props.settings.min;\n      var difference = Math.round(ratio * range / this.props.settings.step) * this.props.settings.step; // Use precision to avoid ugly Javascript floating point rounding issues\n      // (like 35 * .01 = 0.35000000000000003)\n\n      difference = Math.round(difference * this.state.precision) / this.state.precision;\n      return difference + this.props.settings.min;\n    }\n  }, {\n    key: \"determineThumb\",\n    value: function determineThumb(position, value) {\n      if (!this.props.multiple) {\n        return 0;\n      }\n\n      if (position <= this.state.position[0]) {\n        return 0;\n      }\n\n      if (position >= this.state.position[this.state.numberOfThumbs - 1]) {\n        return this.state.numberOfThumbs - 1;\n      }\n\n      var index = 0;\n\n      for (var i = 0; i < this.state.numberOfThumbs - 1; i++) {\n        if (position >= this.state.position[i] && position < this.state.position[i + 1]) {\n          var distanceToSecond = Math.abs(position - this.state.position[i + 1]);\n          var distanceToFirst = Math.abs(position - this.state.position[i]);\n\n          if (distanceToSecond <= distanceToFirst) {\n            return i + 1;\n          } else {\n            return i;\n          }\n        }\n      }\n\n      return index;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value, triggeredByUser, thumbIndex) {\n      if (typeof triggeredByUser === \"undefined\") {\n        triggeredByUser = true;\n      }\n\n      var currentValue = this.props.multiple ? this.state.value[thumbIndex] : this.state.value;\n\n      if (currentValue !== value) {\n        var newValue = [];\n\n        if (this.props.multiple) {\n          newValue = [].concat(_toConsumableArray(this.state.value));\n          newValue[thumbIndex] = value;\n          this.setState({\n            value: newValue\n          });\n        } else {\n          newValue = value;\n          this.setState({\n            value: value\n          });\n        }\n\n        if (this.props.settings.onChange) {\n          this.props.settings.onChange(newValue, {\n            triggeredByUser: triggeredByUser\n          });\n        }\n      }\n    }\n  }, {\n    key: \"setValuePosition\",\n    value: function setValuePosition(value, triggeredByUser, thumbIndex) {\n      if (this.props.multiple) {\n        var positions = [].concat(_toConsumableArray(this.state.position));\n        positions[thumbIndex] = this.determinePosition(value);\n        this.setValue(value, triggeredByUser, thumbIndex);\n        this.setState({\n          position: positions\n        });\n      } else {\n        this.setValue(value, triggeredByUser);\n        this.setState({\n          position: this.determinePosition(value)\n        });\n      }\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(position, thumbIndex) {\n      if (this.props.multiple) {\n        var newPosition = [].concat(_toConsumableArray(this.state.position));\n        newPosition[thumbIndex] = position;\n        this.setState({\n          position: newPosition\n        });\n      } else {\n        this.setState({\n          position: position\n        });\n      }\n    }\n  }, {\n    key: \"rangeMouseDown\",\n    value: function rangeMouseDown(isTouch, e) {\n      e.stopPropagation();\n\n      if (!this.props.disabled) {\n        if (!isTouch) {\n          e.preventDefault();\n        }\n\n        this.setState({\n          mouseDown: true\n        });\n\n        var innerBoundingClientRect = _reactDom2.default.findDOMNode(this.inner).getBoundingClientRect();\n\n        this.innerLeft = innerBoundingClientRect.left;\n        this.innerRight = this.innerLeft + this.inner.offsetWidth;\n        this.rangeMouse(isTouch, e);\n      }\n    }\n  }, {\n    key: \"rangeMouse\",\n    value: function rangeMouse(isTouch, e) {\n      var pageX = void 0;\n      var event = isTouch ? e.touches[0] : e;\n\n      if (event.pageX) {\n        pageX = event.pageX;\n      } else {\n        console.log(\"PageX undefined\");\n      }\n\n      var value = this.determineValue(this.innerLeft, this.innerRight, pageX);\n\n      if (pageX >= this.innerLeft && pageX <= this.innerRight) {\n        if (value >= this.props.settings.min && value <= this.props.settings.max) {\n          var position = pageX - this.innerLeft - this.state.offset;\n          var thumbIndex = this.props.multiple ? this.determineThumb(position) : undefined;\n\n          if (this.props.discrete) {\n            this.setValuePosition(value, false, thumbIndex);\n          } else {\n            this.setPosition(position, thumbIndex);\n            this.setValue(value, undefined, thumbIndex);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"rangeMouseMove\",\n    value: function rangeMouseMove(isTouch, e) {\n      e.stopPropagation();\n\n      if (!isTouch) {\n        e.preventDefault();\n      }\n\n      if (this.state.mouseDown) {\n        this.rangeMouse(isTouch, e);\n      }\n    }\n  }, {\n    key: \"rangeMouseUp\",\n    value: function rangeMouseUp() {\n      this.setState({\n        mouseDown: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _react2.default.createElement(\"div\", null, _react2.default.createElement(\"div\", {\n        onMouseDown: function onMouseDown(event) {\n          return _this3.rangeMouseDown(false, event);\n        },\n        onMouseMove: function onMouseMove(event) {\n          return _this3.rangeMouseMove(false, event);\n        },\n        onMouseUp: function onMouseUp(event) {\n          return _this3.rangeMouseUp(false, event);\n        },\n        onTouchEnd: function onTouchEnd(event) {\n          return _this3.rangeMouseUp(true, event);\n        },\n        onTouchMove: function onTouchMove(event) {\n          return _this3.rangeMouseMove(true, event);\n        },\n        onTouchStart: function onTouchStart(event) {\n          return _this3.rangeMouseDown(true, event);\n        },\n        style: _extends({}, _rangeCss2.default.range, this.props.disabled ? _rangeCss2.default.disabled : {}, this.props.style ? this.props.style : {})\n      }, _react2.default.createElement(\"div\", {\n        className: \"semantic_ui_range_inner\",\n        ref: function ref(inner) {\n          _this3.inner = inner;\n        },\n        style: _extends({}, _rangeCss2.default.inner, this.props.style ? this.props.style.inner ? this.props.style.inner : {} : {})\n      }, _react2.default.createElement(\"div\", {\n        ref: function ref(track) {\n          _this3.track = track;\n        },\n        style: _extends({}, _rangeCss2.default.track, this.props.inverted ? _rangeCss2.default.invertedTrack : {}, this.props.style ? this.props.style.track ? this.props.style.track : {} : {})\n      }), _react2.default.createElement(\"div\", {\n        ref: function ref(trackFill) {\n          _this3.trackFill = trackFill;\n        },\n        style: _extends({}, _rangeCss2.default.trackFill, this.props.inverted ? _rangeCss2.default.invertedTrackFill : {}, _rangeCss2.default[this.props.inverted ? \"inverted-\" + this.props.color : this.props.color], this.props.style ? this.props.style.trackFill ? this.props.style.trackFill : {} : {}, this.props.disabled ? _rangeCss2.default.disabledTrackFill : {}, this.props.style ? this.props.style.disabledTrackFill ? this.props.style.disabledTrackFill : {} : {}, {\n          width: this.state.position + this.state.offset + \"px\"\n        }, this.props.multiple && this.state.position.length > 0 ? {\n          left: this.state.position[0],\n          width: this.state.position[this.state.numberOfThumbs - 1] - this.state.position[0]\n        } : {})\n      }), this.props.multiple ? this.state.position.map(function (pos, i) {\n        return _react2.default.createElement(\"div\", {\n          key: i,\n          style: _extends({}, _rangeCss2.default.thumb, _this3.props.style ? _this3.props.style.thumb ? _this3.props.style.thumb : {} : {}, {\n            left: pos + \"px\"\n          })\n        });\n      }) : _react2.default.createElement(\"div\", {\n        style: _extends({}, _rangeCss2.default.thumb, this.props.style ? this.props.style.thumb ? this.props.style.thumb : {} : {}, {\n          left: this.state.position + \"px\"\n        })\n      }))));\n    }\n  }]);\n\n  return Slider;\n}(_react.Component);\n\nexports.default = Slider;\nSlider.defaultProps = {\n  color: \"red\",\n  settings: {\n    min: 0,\n    max: 10,\n    step: 1,\n    start: 0\n  }\n};\nSlider.propTypes = {\n  color: _propTypes2.default.string,\n  disabled: _propTypes2.default.bool,\n  discrete: _propTypes2.default.bool,\n  inverted: _propTypes2.default.bool,\n  multiple: _propTypes2.default.bool,\n  settings: _propTypes2.default.shape({\n    min: _propTypes2.default.number,\n    max: _propTypes2.default.number,\n    step: _propTypes2.default.number,\n    start: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),\n    onChange: _propTypes2.default.func\n  })\n};","map":null,"metadata":{},"sourceType":"script"}