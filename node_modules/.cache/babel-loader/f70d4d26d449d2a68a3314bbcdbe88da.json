{"ast":null,"code":"import _slicedToArray from \"/Users/erikwoodworth/Coding/ARC/affordability-by-income/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/erikwoodworth/Coding/ARC/affordability-by-income/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport numeral from 'numeral';\n\nvar salePriceData = require('./data/median-sale-price.json');\n\nvar App = function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      income = _useState2[0],\n      setIncome = _useState2[1];\n\n  var _useState3 = useState(salePriceData),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tractData = _useState4[0],\n      setTractData = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      affordablePayment = _useState6[0],\n      setAffordablePayment = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      salePrice = _useState8[0],\n      setSalePrice = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      percentOfIncome = _useState10[0],\n      setPercentOfIncome = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      affordableLoan = _useState12[0],\n      setAffordableLoan = _useState12[1];\n\n  var padding = 10;\n  console.log(income);\n\n  var affordableLoanCalc = function affordableLoanCalc(income, year, apr) {\n    var percentOfIncome = .2;\n    var affordablePayment = income * percentOfIncome / 12;\n    var n = year * 12;\n    var c = apr / 12;\n    var paymentDivisor = c * Math.pow(c + 1, n) / (Math.pow(c + 1, n) - 1);\n    var affordableLoan = parseFloat(affordablePayment) / parseFloat(paymentDivisor);\n    setAffordablePayment(affordablePayment);\n    setAffordableLoan(affordableLoan);\n  };\n\n  var percentOfIncomeCalc = function percentOfIncomeCalc(income, salePrice, year, apr, loop) {\n    var monthlyIncome = income / 12;\n    var n = year * 12;\n    var c = apr / 12;\n    var paymentMultiplier = c * Math.pow(c + 1, n) / (Math.pow(c + 1, n) - 1);\n    var monthlyPayment = salePrice * paymentMultiplier;\n    var percentOfIncome = monthlyPayment / monthlyIncome;\n\n    var calc = function calc() {\n      return !loop ? setPercentOfIncome(percentOfIncome * 100) : percentOfIncome;\n    };\n\n    calc();\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      padding: padding\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Housing Affordability Calculator\"), React.createElement(\"input\", {\n    name: \"income\",\n    placeholder: \"Enter Income\",\n    value: income,\n    onChange: function onChange(event) {\n      return setIncome(numeral(event.target.value).format('$0,0'));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    style: {\n      margin: 10\n    },\n    name: \"home-sale-price\",\n    placeholder: \"Enter Sale Price\",\n    value: salePrice,\n    onChange: function onChange(event) {\n      return setSalePrice(numeral(event.target.value).format('$0,0'));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    // onClick={() => affordableLoanCalc(income.value(), 30, .045)} \n    onClick: function onClick() {\n      return percentOfIncomeCalc(numeral(income).value(), numeral(salePrice).value(), 30, .045);\n    },\n    style: {\n      margin: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Calculate Percent of Income to Afford\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, percentOfIncome ? \"Your mortgage payment would be \".concat(percentOfIncome.toFixed(1), \"% of your income each month.\") : null), tractData ? tractData.map(function (tract) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, tract['Census Tract'] + ': ' + percentOfIncomeCalc(income, tract['Median Sale Price'], 30, .045));\n  }) : null);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/erikwoodworth/Coding/ARC/affordability-by-income/src/App.js"],"names":["React","useState","useEffect","numeral","salePriceData","require","App","income","setIncome","tractData","setTractData","affordablePayment","setAffordablePayment","salePrice","setSalePrice","percentOfIncome","setPercentOfIncome","affordableLoan","setAffordableLoan","padding","console","log","affordableLoanCalc","year","apr","n","c","paymentDivisor","Math","pow","parseFloat","percentOfIncomeCalc","loop","monthlyIncome","paymentMultiplier","monthlyPayment","calc","event","target","value","format","margin","toFixed","map","tract"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport numeral from 'numeral';\nconst salePriceData = require('./data/median-sale-price.json')\n\n\nconst App = () => {\n    const [income, setIncome] = useState();\n    const [tractData, setTractData] = useState(salePriceData);\n    const [affordablePayment, setAffordablePayment] = useState();\n    const [salePrice, setSalePrice] = useState();\n    const [percentOfIncome , setPercentOfIncome] = useState();\n    const [affordableLoan, setAffordableLoan] = useState();\n    const padding = 10;\n\n    console.log(income);\n\n    const affordableLoanCalc = (income, year, apr) => {\n        const percentOfIncome = .2;\n        const affordablePayment = (income * percentOfIncome)/12;\n        const n = year * 12;\n        const c = apr/12;\n        const paymentDivisor = (c * Math.pow((c + 1),n))/(Math.pow((c + 1), n) - 1);\n        const affordableLoan = parseFloat(affordablePayment) / parseFloat(paymentDivisor);    \n\n        setAffordablePayment(affordablePayment);\n        setAffordableLoan(affordableLoan);\n    }\n\n    const percentOfIncomeCalc = (income, salePrice, year, apr, loop) => {\n        const monthlyIncome = income / 12;\n        const n = year * 12;\n        const c = apr / 12;\n        const paymentMultiplier = (c * Math.pow((c + 1),n))/(Math.pow((c + 1), n) - 1);\n        const monthlyPayment = salePrice * paymentMultiplier;\n\n\n        const percentOfIncome = monthlyPayment / monthlyIncome;\n        \n\n        const calc = () => !loop ? setPercentOfIncome(percentOfIncome * 100) : percentOfIncome;\n\n        calc();\n    }\n\n\n    return(\n        <div style={{\n            padding: padding\n        }}>\n            <h2>Housing Affordability Calculator</h2>\n            <input \n                name='income'\n                placeholder='Enter Income'\n                value={income}\n                onChange={event => setIncome(numeral(event.target.value).format('$0,0'))}\n            />\n            <input\n                style={{\n                    margin: 10\n                }} \n                name='home-sale-price'\n                placeholder='Enter Sale Price'\n                value={salePrice}\n                onChange={event => setSalePrice(numeral(event.target.value).format('$0,0'))}\n            />\n            <button\n                // onClick={() => affordableLoanCalc(income.value(), 30, .045)} \n                onClick={() => percentOfIncomeCalc(numeral(income).value(), numeral(salePrice).value(), 30, .045)}\n                style={{\n                    margin: 10\n                }}\n            >\n                Calculate Percent of Income to Afford\n            </button>\n            <h3>{percentOfIncome ? `Your mortgage payment would be ${percentOfIncome.toFixed(1)}% of your income each month.` : null }</h3>\n            {/* <h3>Affordable Monthly Payment: ${affordablePayment}</h3> */}\n            {/* <h3>Affordable Loan: ${affordableLoan}</h3> */}\n            {tractData ? tractData.map(tract =>\n                <p>\n                    {tract['Census Tract'] + ': ' + percentOfIncomeCalc(income, tract['Median Sale Price'], 30, .045)}\n                </p>\n                ) : null}\n        </div>\n    )\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}