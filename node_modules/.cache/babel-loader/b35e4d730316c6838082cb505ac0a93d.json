{"ast":null,"code":"var _jsxFileName = \"/Users/erikwoodworth/Coding/ARC/affordability-by-income/src/components/AffordabilityMap/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Map as LeafletMap, TileLayer, GeoJSON } from 'react-leaflet';\nimport colormap from 'colormap';\n\nvar AffordabilityMap = function AffordabilityMap(props) {\n  var numberOfBins = 72;\n  var colorMap = 'portland';\n  var colors = colormap({\n    colormap: colorMap,\n    nshades: numberOfBins,\n    format: 'hex',\n    alpha: 1\n  }); // console.log('INSIDE MAP COMPONENT')\n  // console.log(props.data)\n  // console.log(props.geojson)\n\n  return React.createElement(LeafletMap, {\n    key: 'leaflet-map',\n    center: [33.8, -84.4],\n    zoom: 9,\n    maxZoom: 18,\n    attributionControl: true,\n    zoomControl: true,\n    doubleClickZoom: true,\n    scrollWheelZoom: true,\n    dragging: true,\n    animate: false // easeLinearity={0.7}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.geojson && props.data ? React.createElement(GeoJSON, {\n    key: 'affordabily-layer',\n    data: props.geojson,\n    style: function style(feature) {\n      var minValue = 10;\n      var maxValue = 50;\n      var geoid = parseInt(feature.properties['GEOID']); // console.log(geoid);\n\n      var tractDataObj = props.data.find(function (tract) {\n        return geoid === tract['Census Tract'];\n      }); // console.log(tractDataObj)\n\n      var value = tractDataObj ? tractDataObj['Percent of Income'] : null;\n      var distFromMin = value - minValue;\n      var range = maxValue - minValue;\n      var binningRatio = distFromMin / range;\n      var indexRange = numberOfBins - 1;\n      var color = value ? colors[Math.floor(value === 0 ? 0 : binningRatio * indexRange)] : null;\n      return {\n        color: value < minValue ? colors[0] : value > maxValue ? colors[colors.length - 1] : color,\n        weight: 1,\n        fillColor: value < minValue ? colors[0] : value > maxValue ? colors[colors.length - 1] : color,\n        fillOpacity: value ? 1 : 0\n      };\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }) : null, React.createElement(TileLayer, {\n    key: 'tile-layer-default' // url='https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png'\n    ,\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }));\n};\n\nexport default AffordabilityMap;","map":{"version":3,"sources":["/Users/erikwoodworth/Coding/ARC/affordability-by-income/src/components/AffordabilityMap/index.js"],"names":["React","useState","useEffect","Map","LeafletMap","TileLayer","GeoJSON","colormap","AffordabilityMap","props","numberOfBins","colorMap","colors","nshades","format","alpha","geojson","data","feature","minValue","maxValue","geoid","parseInt","properties","tractDataObj","find","tract","value","distFromMin","range","binningRatio","indexRange","color","Math","floor","length","weight","fillColor","fillOpacity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Map as LeafletMap, TileLayer, GeoJSON } from 'react-leaflet';\nimport colormap from 'colormap';\n\nconst AffordabilityMap = props => {\n\n    const numberOfBins = 72;\n    const colorMap = 'portland';\n      \n    let colors = colormap({\n      colormap: colorMap,\n      nshades: numberOfBins,\n      format: 'hex',\n      alpha: 1\n    });\n\n    // console.log('INSIDE MAP COMPONENT')\n    // console.log(props.data)\n    // console.log(props.geojson)\n\n    return (\n        <LeafletMap\n          key={'leaflet-map'}\n          center={[33.8, -84.4]}\n          zoom={9}\n          maxZoom={18}\n          attributionControl={true}\n          zoomControl={true}\n          doubleClickZoom={true}\n          scrollWheelZoom={true}\n          dragging={true}\n          animate={false}\n          // easeLinearity={0.7}\n        >\n\n        { props.geojson && props.data ?\n          <GeoJSON\n          key={'affordabily-layer'}\n          data={props.geojson}\n          \n          style={feature => {\n\n            const minValue = 10;\n            const maxValue = 50;\n            const geoid = parseInt(feature.properties['GEOID'])\n            // console.log(geoid);\n            const tractDataObj = props.data.find(tract => geoid === tract['Census Tract']);\n            // console.log(tractDataObj)\n            const value = tractDataObj ? tractDataObj['Percent of Income'] : null;\n            const distFromMin = value - minValue;\n            const range = maxValue - minValue;\n            const binningRatio = distFromMin/range;\n            const indexRange = numberOfBins - 1;\n    \n            const color = value ? colors[Math.floor(value === 0 ? 0 : binningRatio * indexRange)] : null;\n\n            return ({\n                color: value < minValue ? colors[0] : value > maxValue ? colors[colors.length -1] : color,\n                weight: 1,\n                fillColor: value < minValue ? colors[0] : value > maxValue ? colors[colors.length -1] : color,\n                fillOpacity: value ? 1 : 0\n            })\n          }}\n        /> : null\n        }\n\n          <TileLayer\n          key={'tile-layer-default'}\n          // url='https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png'\n          url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n          />\n         \n    \n        </LeafletMap>\n    \n      );\n}\n\nexport default AffordabilityMap;"]},"metadata":{},"sourceType":"module"}